{"name": "test_estimate_bridge_native_to_not_native[Arbitrum One (ETH)]", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \n{\"ok\":false,\"data\":null,\"error\":\"Request failed with status code 400\"}.", "trace": "network = 'Arbitrum One (ETH)'\n\n    @pytest.mark.parametrize(\"network\", networks)\n    def test_estimate_bridge_native_to_not_native(network):\n        net = de_bridge_keys_data()[network].get('net')\n        native_token = de_bridge_keys_data()[network].get('nativeToken')\n        not_native_token = de_bridge_keys_data()[network].get('notNativeToken')\n>       DeBridge().EstimateBridge().estimate_bridge_native_to_not_native(net=net, native_token=native_token,\n                                                                         not_native_token=not_native_token)\n\ntests/api_tests/tests_de_bridge.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge.EstimateBridge object at 0x10ea610d0>\nnet = 'arbitrum', native_token = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\nnot_native_token = '0xd4d42f0b6def4ce0383636770ef773390d85c61a'\n\n    def estimate_bridge_native_to_not_native(self, net, native_token, not_native_token):\n        response = requests.get(\n            f\"{self.url}?srcNet={net}&srcTokenAddress={native_token}\"\n            f\"&srcTokenAmount=1&dstNet={net}&dstTokenAddress={not_native_token}\")\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \nE       {\"ok\":false,\"data\":null,\"error\":\"Request failed with status code 400\"}.\n\nserviceCalls/debrdige_service.py:39: AssertionError"}, "attachments": [{"name": "log", "source": "93f40a55-ebae-42d4-8830-b45c6f8b5113-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "network", "value": "'Arbitrum One (ETH)'"}], "start": 1685610393377, "stop": 1685610393879, "uuid": "301bc55f-8d5c-4505-9e04-7a90b8a7355d", "historyId": "2dd72e7a2d00b1c265d292216f2982a4", "testCaseId": "02aafaeb5599f02847fcd6b690f3a745", "fullName": "tests.api_tests.tests_de_bridge#test_estimate_bridge_native_to_not_native", "labels": [{"name": "parentSuite", "value": "tests.api_tests"}, {"name": "suite", "value": "tests_de_bridge"}, {"name": "host", "value": "MacBook-Air-Anna.local"}, {"name": "thread", "value": "16727-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_tests.tests_de_bridge"}]}