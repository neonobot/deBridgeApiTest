{"name": "test_get_bridge_tx_stablecoin_to_not_native[Ethereum (ETH)-Avalanche (AVAX)]", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \n{\"ok\":false,\"data\":null,\"error\":\"Request failed with status code 429\"}.", "trace": "src_network = 'Avalanche (AVAX)', dst_network = 'Ethereum (ETH)'\n\n    @pytest.mark.parametrize(\"src_network\", networks)\n    @pytest.mark.parametrize(\"dst_network\", networks)\n    def test_get_bridge_tx_stablecoin_to_not_native(src_network, dst_network):\n        src_net = de_bridge_keys_data()[src_network].get('net')\n        dst_net = de_bridge_keys_data()[dst_network].get('net')\n        src_token_address = de_bridge_keys_data()[src_network].get('stableCoin')\n        dst_token_address = de_bridge_keys_data()[dst_network].get('notNativeToken')\n        src_token_amount = 1\n        dst_chain_recipient_address = de_bridge_keys_data()[dst_network].get('owner')\n        dst_chain_fallback_address = de_bridge_keys_data()[dst_network].get('owner')\n        if src_net != dst_net:\n>           DeBridge().get_bridge_tx(src_net=src_net, dst_net=dst_net, src_token_address=src_token_address,\n                                     dst_token_address=dst_token_address, src_token_amount=src_token_amount,\n                                     dst_chain_recipient_address=dst_chain_recipient_address,\n                                     dst_chain_fallback_address=dst_chain_fallback_address)\n\ntests/api_tests/tests_de_bridge.py:211: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge object at 0x10f33ed90>\nsrc_net = 'avalanche', dst_net = 'eth'\nsrc_token_address = '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d'\ndst_token_address = '0x2a3bff78b79a009976eea096a51a948a3dc00e34'\nsrc_token_amount = 1\ndst_chain_recipient_address = '0xd5ed26d93129a8b51ac54b40477327f6511824b6'\ndst_chain_fallback_address = '0xd5ed26d93129a8b51ac54b40477327f6511824b6'\n\n    def get_bridge_tx(self, src_net, dst_net, src_token_address, dst_token_address, src_token_amount,\n                      dst_chain_recipient_address, dst_chain_fallback_address):\n        response = requests.get(\n            f\"{self.url}getBridgeTx?srcNet={src_net}&srcTokenAddress={src_token_address}&\"\n            f\"srcTokenAmount={src_token_amount}&dstNet={dst_net}&dstTokenAddress={dst_token_address}&\"\n            f\"dstChainRecipientAddress={dst_chain_recipient_address}&\"\n            f\"dstChainFallbackAddress={dst_chain_fallback_address}\")\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \nE       {\"ok\":false,\"data\":null,\"error\":\"Request failed with status code 429\"}.\n\nserviceCalls/debrdige_service.py:136: AssertionError"}, "attachments": [{"name": "log", "source": "45c2a988-3d2a-4e85-b8c3-d7dc623a6cce-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "dst_network", "value": "'Ethereum (ETH)'"}, {"name": "src_network", "value": "'Avalanche (AVAX)'"}], "start": 1685610448345, "stop": 1685610448793, "uuid": "a8eb613b-3bbf-44d6-b4d9-e0831bb7a309", "historyId": "1d4eab0fa503a9e3f7a9a513c3f7456d", "testCaseId": "6e711f5096f373c481052d0ca5e55c20", "fullName": "tests.api_tests.tests_de_bridge#test_get_bridge_tx_stablecoin_to_not_native", "labels": [{"name": "parentSuite", "value": "tests.api_tests"}, {"name": "suite", "value": "tests_de_bridge"}, {"name": "host", "value": "MacBook-Air-Anna.local"}, {"name": "thread", "value": "16728-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_tests.tests_de_bridge"}]}