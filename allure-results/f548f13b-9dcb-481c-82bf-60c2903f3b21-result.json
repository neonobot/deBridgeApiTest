{"name": "test_estimate_bridge_not_native_to_native[Avalanche (AVAX)]", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \n{\"ok\":false,\"data\":null,\"error\":\"Given amount of input asset is too small to cover protocol fees, cannot estimate reasonable outcome of an order\"}.", "trace": "network = 'Avalanche (AVAX)'\n\n    @pytest.mark.parametrize(\"network\", networks)\n    def test_estimate_bridge_not_native_to_native(network):\n        net = de_bridge_keys_data()[network].get('net')\n        native_token = de_bridge_keys_data()[network].get('nativeToken')\n        not_native_token = de_bridge_keys_data()[network].get('notNativeToken')\n>       DeBridge().EstimateBridge().estimate_bridge_not_native_to_native(net=net, native_token=native_token,\n                                                                         not_native_token=not_native_token)\n\ntests/api_tests/tests_de_bridge.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge.EstimateBridge object at 0x10a8db430>\nnet = 'avalanche'\nnot_native_token = '0xe896cdeaac9615145c0ca09c8cd5c25bced6384c'\nnative_token = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\n\n    def estimate_bridge_not_native_to_native(self, net, not_native_token, native_token):\n        response = requests.get(\n            f\"{self.url}?srcNet={net}&srcTokenAddress={not_native_token}\"\n            f\"&srcTokenAmount=1&dstNet={net}&dstTokenAddress={native_token}\")\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \nE       {\"ok\":false,\"data\":null,\"error\":\"Given amount of input asset is too small to cover protocol fees, cannot estimate reasonable outcome of an order\"}.\n\nserviceCalls/debrdige_service.py:65: AssertionError"}, "attachments": [{"name": "log", "source": "c36afa94-8cfb-46d1-982e-50ebadc28ece-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "network", "value": "'Avalanche (AVAX)'"}], "start": 1685619225776, "stop": 1685619227444, "uuid": "8ed66453-cdd1-4206-ac35-6753cb0c06fa", "historyId": "f6cf733156a884c54bd3b5ec58940fb0", "testCaseId": "f166ccaf1cb63e9625a89429066bdc6d", "fullName": "tests.api_tests.tests_de_bridge#test_estimate_bridge_not_native_to_native", "labels": [{"name": "parentSuite", "value": "tests.api_tests"}, {"name": "suite", "value": "tests_de_bridge"}, {"name": "host", "value": "MacBook-Air-Anna.local"}, {"name": "thread", "value": "18938-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_tests.tests_de_bridge"}]}