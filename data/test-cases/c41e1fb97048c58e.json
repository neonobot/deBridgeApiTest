{
  "uid" : "c41e1fb97048c58e",
  "name" : "test_estimate_bridge_stablecoin_to_not_native[Avalanche (AVAX)]",
  "fullName" : "tests.api_tests.tests_de_bridge#test_estimate_bridge_stablecoin_to_not_native",
  "historyId" : "78e69f734586a5d813089208bbb3abd6",
  "time" : {
    "start" : 1686035358283,
    "stop" : 1686035358893,
    "duration" : 610
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \n{\"ok\":false,\"data\":null,\"error\":\"call revert exception [ See: https://links.ethers.org/v5-errors-CALL_EXCEPTION ] (method=\\\"decimals()\\\", data=\\\"0x\\\", errorArgs=null, errorName=null, errorSignature=null, reason=null, code=CALL_EXCEPTION, version=abi/5.7.0)\"}.",
  "statusTrace" : "network = 'Avalanche (AVAX)'\n\n    @pytest.mark.parametrize(\"network\", networks)\n    def test_estimate_bridge_stablecoin_to_not_native(network):\n        net = de_bridge_keys_data()[network].get('net')\n        stable_coin = de_bridge_keys_data()[network].get('stableCoin')\n        not_native_token = de_bridge_keys_data()[network].get('notNativeToken')\n>       DeBridge().EstimateBridge().estimate_bridge_stablecoin_to_not_native(net=net, stable_coin=stable_coin,\n                                                                             not_native_token=not_native_token)\n\ntests/api_tests/tests_de_bridge.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge.EstimateBridge object at 0x7f6ddf5a8b20>\nnet = 'avalanche', stable_coin = '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d'\nnot_native_token = '0xe896cdeaac9615145c0ca09c8cd5c25bced6384c'\n\n    def estimate_bridge_stablecoin_to_not_native(self, net, stable_coin, not_native_token):\n        response = requests.get(\n            f\"{self.url}?srcNet={net}&srcTokenAddress={stable_coin}\"\n            f\"&srcTokenAmount=10&dstNet={net}&dstTokenAddress={not_native_token}\")\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \nE       {\"ok\":false,\"data\":null,\"error\":\"call revert exception [ See: https://links.ethers.org/v5-errors-CALL_EXCEPTION ] (method=\\\"decimals()\\\", data=\\\"0x\\\", errorArgs=null, errorName=null, errorSignature=null, reason=null, code=CALL_EXCEPTION, version=abi/5.7.0)\"}.\n\nserviceCalls/debrdige_service.py:52: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "tests_de_bridge"
  }, {
    "name" : "host",
    "value" : "fv-az617-204"
  }, {
    "name" : "thread",
    "value" : "2527-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.tests_de_bridge"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "network",
    "value" : "'Avalanche (AVAX)'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c41e1fb97048c58e.json",
  "parameterValues" : [ "'Avalanche (AVAX)'" ]
}