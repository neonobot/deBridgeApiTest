{
  "uid" : "c148ba7d23f6dfe1",
  "name" : "test_estimate_bridge_native_to_not_native[Polygon (MATIC)-Arbitrum One (ETH)]",
  "fullName" : "tests.api_tests.tests_de_bridge#test_estimate_bridge_native_to_not_native",
  "historyId" : "1e53096ba326c5a8103e88b4542c3025",
  "time" : {
    "start" : 1686065667689,
    "stop" : 1686065698261,
    "duration" : 30572
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Ожидался status = 200, пришел status = 504. Тело ответа: \n<html><body><h1>504 Gateway Time-out</h1>\nThe server didn't respond in time.\n</body></html>\n.",
  "statusTrace" : "src_nets = 'Arbitrum One (ETH)', dst_nets = 'Polygon (MATIC)'\n\n    @pytest.mark.parametrize(\"src_nets\", networks)\n    @pytest.mark.parametrize(\"dst_nets\", networks)\n    def test_estimate_bridge_native_to_not_native(src_nets, dst_nets):\n        src_net = de_bridge_keys_data()[src_nets].get('net')\n        dst_net = de_bridge_keys_data()[dst_nets].get('net')\n        src_native_token = de_bridge_keys_data()[src_nets].get('nativeToken')\n        dst_not_native_token = de_bridge_keys_data()[dst_nets].get('notNativeToken')\n>       DeBridge().EstimateBridge().estimate_bridge_native_to_not_native(src_net=src_net, dst_net=dst_net,\n                                                                         src_native_token=src_native_token,\n                                                                         dst_not_native_token=dst_not_native_token)\n\ntests/api_tests/tests_de_bridge.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge.EstimateBridge object at 0x7f7537e3cf40>\nsrc_net = 'arbitrum', dst_net = 'polygon'\nsrc_native_token = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\ndst_not_native_token = '0xa1428174f516f527fafdd146b883bb4428682737'\n\n    def estimate_bridge_native_to_not_native(self, src_net, dst_net, src_native_token, dst_not_native_token):\n        response = requests.get(\n            f\"{self.url}?srcNet={src_net}&srcTokenAddress={src_native_token}\"\n            f\"&srcTokenAmount=100&dstNet={dst_net}&dstTokenAddress={dst_not_native_token}\")\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 504. Тело ответа: \nE       <html><body><h1>504 Gateway Time-out</h1>\nE       The server didn't respond in time.\nE       </body></html>\nE       .\n\nserviceCalls/debrdige_service.py:39: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "tests_de_bridge"
  }, {
    "name" : "host",
    "value" : "fv-az268-245"
  }, {
    "name" : "thread",
    "value" : "2494-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.tests_de_bridge"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "dst_nets",
    "value" : "'Polygon (MATIC)'"
  }, {
    "name" : "src_nets",
    "value" : "'Arbitrum One (ETH)'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c148ba7d23f6dfe1.json",
  "parameterValues" : [ "'Polygon (MATIC)'", "'Arbitrum One (ETH)'" ]
}