{
  "uid" : "9a092e1a8198d955",
  "name" : "test_estimate_bridge_native_to_not_native[Polygon (MATIC)]",
  "fullName" : "tests.api_tests.tests_de_bridge#test_estimate_bridge_native_to_not_native",
  "historyId" : "51a8aaebb40bb68f46ba328a29561e49",
  "time" : {
    "start" : 1685972413008,
    "stop" : 1685972413464,
    "duration" : 456
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \n{\"ok\":false,\"data\":null,\"error\":\"\\\"owner\\\" is not allowed\"}.",
  "statusTrace" : "network = 'Polygon (MATIC)'\n\n    @pytest.mark.parametrize(\"network\", networks)\n    def test_estimate_bridge_native_to_not_native(network):\n        net = de_bridge_keys_data()[network].get('net')\n        native_token = de_bridge_keys_data()[network].get('nativeToken')\n        not_native_token = de_bridge_keys_data()[network].get('notNativeToken')\n        owner = de_bridge_keys_data()[network].get('owner')\n>       DeBridge().EstimateBridge().estimate_bridge_native_to_not_native(net=net, native_token=native_token,\n                                                                         not_native_token=not_native_token, owner=owner)\n\ntests/api_tests/tests_de_bridge.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge.EstimateBridge object at 0x7f613b7cb880>\nnet = 'polygon', native_token = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\nnot_native_token = '0xa1428174f516f527fafdd146b883bb4428682737'\nowner = '0xd5ed26d93129a8b51ac54b40477327f6511824b6'\n\n    def estimate_bridge_native_to_not_native(self, net, native_token, not_native_token, owner): #todo: добавить в параметры owner\n        response = requests.get(\n            f\"{self.url}?srcNet={net}&srcTokenAddress={native_token}\"\n            f\"&srcTokenAmount=10&dstNet={net}&dstTokenAddress={not_native_token}&owner={owner}\")\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \nE       {\"ok\":false,\"data\":null,\"error\":\"\\\"owner\\\" is not allowed\"}.\n\nserviceCalls/debrdige_service.py:39: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "tests_de_bridge"
  }, {
    "name" : "host",
    "value" : "fv-az396-612"
  }, {
    "name" : "thread",
    "value" : "2556-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.tests_de_bridge"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "network",
    "value" : "'Polygon (MATIC)'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9a092e1a8198d955.json",
  "parameterValues" : [ "'Polygon (MATIC)'" ]
}