{
  "uid" : "113ef1c48d32e89",
  "name" : "test_estimate_bridge",
  "fullName" : "tests.api_tests.tests_de_bridge#test_estimate_bridge",
  "historyId" : "cfd5ccb227c1a003fddf7f47ceea184d",
  "time" : {
    "start" : 1685615493461,
    "stop" : 1685615493855,
    "duration" : 394
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \n{\"ok\":false,\"data\":null,\"error\":\"\\\"srcNet\\\" is required\"}.",
  "statusTrace" : "def test_estimate_bridge():  # \"error\":\"Network undefined is not available in DeBridge\"\n>       DeBridge().EstimateBridge().estimate_bridge_not_query()\n\ntests/api_tests/tests_de_bridge.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge.EstimateBridge object at 0x10f36de80>\n\n    def estimate_bridge_not_query(self):\n        response = requests.get(self.url)  # без query параметров\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \nE       {\"ok\":false,\"data\":null,\"error\":\"\\\"srcNet\\\" is required\"}.\n\nserviceCalls/debrdige_service.py:26: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \n{\"ok\":false,\"data\":null,\"error\":\"\\\"srcNet\\\" is required\"}.",
    "statusTrace" : "def test_estimate_bridge():  # \"error\":\"Network undefined is not available in DeBridge\"\n>       DeBridge().EstimateBridge().estimate_bridge_not_query()\n\ntests/api_tests/tests_de_bridge.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <serviceCalls.debrdige_service.DeBridge.EstimateBridge object at 0x10f36de80>\n\n    def estimate_bridge_not_query(self):\n        response = requests.get(self.url)  # без query параметров\n        logger.info(f\"Отправлен запрос на роут - {response.url}\")\n        logger.info(response.text)\n>       assert response.status_code == 200, f\"Ожидался status = {200}, \" \\\n                                            f\"пришел status = {response.status_code}. \" \\\n                                            f\"Тело ответа: \\n{response.text}.\"\nE       AssertionError: Ожидался status = 200, пришел status = 400. Тело ответа: \nE       {\"ok\":false,\"data\":null,\"error\":\"\\\"srcNet\\\" is required\"}.\n\nserviceCalls/debrdige_service.py:26: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7bf6b6b043d8d1f6",
      "name" : "log",
      "source" : "7bf6b6b043d8d1f6.txt",
      "type" : "text/plain",
      "size" : 213
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "tests_de_bridge"
  }, {
    "name" : "host",
    "value" : "MacBook-Air-Anna.local"
  }, {
    "name" : "thread",
    "value" : "18188-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.tests_de_bridge"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "113ef1c48d32e89.json",
  "parameterValues" : [ ]
}