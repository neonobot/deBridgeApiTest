name: Run Tests

on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create folder
        run: mkdir allure-results

      - name: Commit and push changes
        run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add .
            git commit -m "Create my_folder"
            git push  

      - name: Set BASE_URL environment variable
        run: echo "BASE_URL=${{ secrets.BASE_URL }}" >> $GITHUB_ENV

      - name: Set TELEGRAM_BOT_TOKEN environment variable
        run: echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> $GITHUB_ENV

      - name: Create temporary keys_de_bridge.json
        run: echo '${{ secrets.KEYS_DE_BRIDGE }}' > keys_de_bridge.json

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set up Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -o allure-2.15.0.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.15.0/allure-2.15.0.tgz
          sudo tar -zxvf allure-2.15.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.15.0/bin/allure /usr/bin/allure
          allure --version

      - name: Clean previous Allure results
        run: rm -rf allure-results

      - name: Run tests and generate Allure report
        id: test-results
        run: |
          python -m pytest -n=2 ./tests/api_tests/tests_de_bridge.py | tee test_results.txt
          echo "TOTAL_TESTS=$(cat test_results.txt | grep -oP '(\d+) total')" >> $GITHUB_ENV
          echo "PASSED_TESTS=$(cat test_results.txt | grep -oP '(\d+) passed')" >> $GITHUB_ENV
          echo "FAILED_TESTS=$(cat test_results.txt | grep -oP '(\d+) failed')" >> $GITHUB_ENV
          echo "SKIPPED_TESTS=$(cat test_results.txt | grep -oP '(\d+) skipped')" >> $GITHUB_ENV
          allure generate ./allure-results -o ./allure-report-$GITHUB_RUN_NUMBER
      

      - name: Deploy Allure report to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: ./allure-report-$GITHUB_RUN_NUMBER
          publish_branch: gh-pages


      - name: Send Test Results via Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TOTAL_TESTS: ${{ env.TOTAL_TESTS }}
          PASSED_TESTS: ${{ env.PASSED_TESTS }}
          FAILED_TESTS: ${{ env.FAILED_TESTS }}
          SKIPPED_TESTS: ${{ env.SKIPPED_TESTS }}
          Allure Report: https://neonobot.github.io/deBridgeApiTest/
        run: python telegram_bot.py
